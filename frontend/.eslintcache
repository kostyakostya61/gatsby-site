[{"/home/user/projects/gatsby-app/gatsby-site/frontend/src/index.js":"1","/home/user/projects/gatsby-app/gatsby-site/frontend/src/App.js":"2","/home/user/projects/gatsby-app/gatsby-site/frontend/src/reportWebVitals.js":"3","/home/user/projects/gatsby-app/gatsby-site/frontend/src/container.js":"4","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/context/user-context.js":"5","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/context/auth-context.js":"6","/home/user/projects/gatsby-app/gatsby-site/frontend/src/routes.js":"7","/home/user/projects/gatsby-app/gatsby-site/frontend/src/api/auth.js":"8","/home/user/projects/gatsby-app/gatsby-site/frontend/src/api/api.js":"9","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/main-page/main-page.js":"10","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/auth-page/auth-page.js":"11","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/change-data-page/change-data-page.js":"12","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/register/register.js":"13","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/modal/modal.js":"14","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/login/login.js":"15","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/auth-page-components/description/description.js":"16","/home/user/projects/gatsby-app/gatsby-site/frontend/src/utils/validator.js":"17","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/route/route.js":"18","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/change-data/change-data.js":"19","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/notes-page/notes-page.js":"20"},{"size":500,"mtime":1607410861946,"results":"21","hashOfConfig":"22"},{"size":357,"mtime":1608279166548,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607410861946,"results":"24","hashOfConfig":"22"},{"size":368,"mtime":1608210034980,"results":"25","hashOfConfig":"22"},{"size":761,"mtime":1608289748123,"results":"26","hashOfConfig":"22"},{"size":818,"mtime":1608533366020,"results":"27","hashOfConfig":"22"},{"size":960,"mtime":1608559276954,"results":"28","hashOfConfig":"22"},{"size":442,"mtime":1608553979995,"results":"29","hashOfConfig":"22"},{"size":521,"mtime":1608281408520,"results":"30","hashOfConfig":"22"},{"size":2981,"mtime":1608041308684,"results":"31","hashOfConfig":"22"},{"size":2805,"mtime":1608559321201,"results":"32","hashOfConfig":"22"},{"size":3273,"mtime":1608559200520,"results":"33","hashOfConfig":"22"},{"size":3289,"mtime":1608041308684,"results":"34","hashOfConfig":"22"},{"size":320,"mtime":1608016424307,"results":"35","hashOfConfig":"22"},{"size":2308,"mtime":1608210303779,"results":"36","hashOfConfig":"22"},{"size":1350,"mtime":1608127299395,"results":"37","hashOfConfig":"22"},{"size":2742,"mtime":1608553200582,"results":"38","hashOfConfig":"22"},{"size":416,"mtime":1608539855618,"results":"39","hashOfConfig":"22"},{"size":4741,"mtime":1608559042823,"results":"40","hashOfConfig":"22"},{"size":162,"mtime":1608559158105,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f568ac",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/projects/gatsby-app/gatsby-site/frontend/src/index.js",[],["94","95"],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/App.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/reportWebVitals.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/container.js",["96"],"import React, { useEffect } from 'react';\n\nimport style from './container.module.scss';\n\nimport { useRoutes } from './routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Container() {\n  const routes = useRoutes();\n\n  return (\n    <Router>\n      <div className={style.container}>{routes}</div>\n    </Router>\n  );\n}\n\nexport default Container;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/context/user-context.js",["97","98"],"import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { nameRequest } from '../../api/auth';\nimport { AuthContext } from './auth-context';\n\nexport const UserContext = createContext({});\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState();\n  const { token } = useContext(AuthContext);\n  const findUser = async () => {\n    const user = await nameRequest(token);\n\n    setUser(user.data);\n    return user.data;\n  };\n\n  useEffect(() => {\n    findUser();\n  }, [token]);\n\n  const contextValue = useMemo(\n    () => ({\n      findUser,\n      user,\n      token,\n    }),\n    [user]\n  );\n  return (\n    <UserContext.Provider value={contextValue}>{children}</UserContext.Provider>\n  );\n};\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/context/auth-context.js",["99","100"],"import React, { useState, createContext, useMemo, useEffect } from 'react';\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const tokenValue = localStorage.getItem('token');\n  const [token, setToken] = useState(tokenValue);\n  const isAuth = useMemo(() => !!token, [token]);\n  const login = (jwtToken) => {\n    setToken(jwtToken);\n    localStorage.setItem('token', jwtToken);\n  };\n\n  const logout = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  const contextValue = useMemo(() => ({ login, logout, token, isAuth }));\n  useEffect(() => {\n    // const tokenAuth = tokenValue;\n    if (tokenValue) {\n      login(tokenValue);\n    }\n  }, [login]);\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/routes.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/api/auth.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/api/api.js",["101"],"// import React from 'react';\nimport axios from 'axios';\n\nconst host = 'http://localhost:5000';\nconst Api = async (method, url, data, headers) => {\n  console.log(method, url, data);\n  console.log(headers);\n  try {\n    return await axios({\n      method: method,\n      baseURL: url,\n      headers: headers,\n      data: data,\n    });\n\n    // return await axios[method](`${host}${url}`, {\n    //   headers: headers,\n    //   data,\n    // });\n  } catch (e) {\n    console.log('Erros');\n    throw e;\n  }\n};\n\nexport default Api;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/main-page/main-page.js",["102"],"import React, { useState } from 'react';\nimport style from './main-page.module.scss';\nimport image from '../../images/image.png';\nimport Registration from '../../components/register/register';\nimport Modal from '../../components/modal/modal';\nimport Login from '../../components/login/login';\n\nfunction MainPage() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const handleCLoseModdal = () => {\n    setIsOpen(false);\n    setIsLogin(false);\n    setIsSignUp(false);\n  };\n  const linkArray = [\n    {\n      name: 'OVERVIEW',\n      href: 'overview',\n    },\n    {\n      name: 'FEATURES',\n      href: 'features',\n    },\n    {\n      name: 'TECHNOLOGY',\n      href: 'technology',\n    },\n    {\n      name: 'CONTACT',\n      href: 'contact',\n    },\n    {\n      name: 'PROVIDERS',\n      href: 'providers',\n    },\n  ];\n\n  const linkComponents = linkArray.map((link) => {\n    return (\n      <div>\n        <a href={link.href}>{link.name}</a>\n      </div>\n    );\n  });\n  return (\n    <div className={style.container}>\n      <div className={style.shade}>\n        <div className={style.content}>\n          <div className={style.navigation}>\n            <div className={style.brand}>\n              <div>\n                <img src={image} />\n              </div>\n              <div>\n                <p>CLOUDBUDGET</p>\n              </div>\n            </div>\n\n            <div className={style.navbar}>\n              <div className={style.link}>{linkComponents}</div>\n            </div>\n\n            <div className={style.identification}>\n              <div className={style.btn}>\n                <button onClick={() => setIsOpen(true)}>SIGN UP</button>\n                {isOpen && (\n                  <Modal onClose={handleCLoseModdal}>\n                    <Registration />\n                  </Modal>\n                )}\n              </div>\n              <div className={style.btn}>\n                <button onClick={() => setIsLogin(true)}>LOGIN</button>\n                {isLogin && (\n                  <Modal onClose={handleCLoseModdal}>\n                    <Login />\n                  </Modal>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* <div className={style.company}> */}\n          <div className={style.header}>\n            <h3>CLOUDBUDGET</h3>\n\n            <div className={style.description}>\n              <p>\n                Cloud budget management for everyone. Only €69.95 a Month After\n                a 7 Day Trial of Up to €4.99\n              </p>\n            </div>\n          </div>\n\n          <div className={style.sign_up}>\n            <button onClick={() => setIsSignUp(true)}>SIGN UP</button>\n            {isSignUp && (\n              <Modal onClose={handleCLoseModdal}>\n                <Registration />\n              </Modal>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/auth-page/auth-page.js",["103","104","105"],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/change-data-page/change-data-page.js",["106","107"],"import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport style from './change-data-page.module.scss';\nimport image from '../../images/image.png';\n\nimport { AuthContext } from '../../components/context/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../../components/context/user-context';\n\nimport { Spinner } from '@blueprintjs/core';\nimport Modal from '../../components/modal/modal';\nimport ChangeData from '../../components/change-data/change-data';\n\nfunction AuthPage() {\n  const [userValue, setUserValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const auth = useContext(AuthContext);\n  const user = useContext(UserContext);\n\n  const handleCLoseModdal = () => {\n    setIsOpen(false);\n  };\n\n  let history = useHistory();\n  const logoutHandler = (event) => {\n    event.preventDefault();\n    auth.logout();\n    history.push('/');\n  };\n\n  const userName = useCallback(\n    async (values) => {\n      const userNameValue = await user.findUser(values);\n\n      setUserValue({ name: userNameValue.user_first_name });\n      return userNameValue;\n    },\n    [user]\n  );\n\n  const linkArray = [\n    {\n      name: 'MAIN PAGE',\n      href: 'auth-page',\n    },\n    {\n      name: 'NOTES PAGE',\n      href: 'notes-page',\n    },\n    {\n      name: 'FEATURES',\n      href: 'features',\n    },\n    {\n      name: 'TECHNOLOGY',\n      href: 'technology',\n    },\n    {\n      name: 'CONTACT',\n      href: 'contact',\n    },\n  ];\n\n  const linkComponents = linkArray.map((link) => {\n    return (\n      <div>\n        <a href={link.href}>{link.name}</a>\n      </div>\n    );\n  });\n\n  useEffect(() => {\n    userName();\n  }, []);\n\n  return (\n    <div className={style.container}>\n      <div className={style.shade}>\n        <div className={style.content}>\n          <div className={style.navigation}>\n            <div className={style.brand}>\n              <div>\n                <img src={image} />\n              </div>\n              <div>\n                <p>CLOUDBUDGET</p>\n              </div>\n            </div>\n\n            <div className={style.navbar}>\n              <div className={style.link}>{linkComponents}</div>\n            </div>\n\n            <div className={style.identification}>\n              <div className={style.btn}>\n                <button onClick={logoutHandler}>LOG OUT</button>\n              </div>\n            </div>\n          </div>\n\n          <div className={style.header}>\n            <h3>CLOUDBUDGET</h3>\n\n            <div className={style.greeting}>\n              {!userValue.name ? (\n                <Spinner intent=\"primary\" />\n              ) : (\n                <p>Hello {userValue.name}!</p>\n              )}\n            </div>\n            <div className={style.description}>\n              <h3>Do you want to edit your profile?</h3>\n            </div>\n            <div className={style.edit_button}>\n              <button onClick={() => setIsOpen(true)}>Click here</button>\n              {isOpen && (\n                <Modal onClose={handleCLoseModdal}>\n                  {/* <ChangeData /> */}\n                  <ChangeData />\n                </Modal>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthPage;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/register/register.js",["108"],"import React from 'react';\nimport style from './register.module.scss';\nimport { registrationRequest } from '../../api/auth';\nimport { Form, Field } from 'react-final-form';\nimport { validation } from '../../utils/validator';\n\nfunction Registration() {\n  \n  const onSubmit = (values) => {\n    console.log(values);\n    registrationRequest(values);\n  };\n\n\n  const ErrorValid = ({ meta }) => {\n    {\n      return (meta.error || meta.submitError) && meta.touched ? (\n        <span>{meta.error || meta.submitError}</span>\n      ) : (\n        <></>\n      );\n    }\n  };\n\n  return (\n    <div className={style.modal}>\n      <Form\n        onSubmit={onSubmit}\n        validate={validation}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <h1>Registration</h1>\n            <Field name=\"name\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Name</label>\n                  <input\n                    {...input}\n                    name=\"name\"\n                    type=\"name\"\n                    placeholder=\"Your Name\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"lastname\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Lastname</label>\n                  <input\n                    {...input}\n                    type=\"lastname\"\n                    placeholder=\"Your Lastname\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <label> Email</label>\n                  <input {...input} type=\"email\" placeholder=\"Your Email\" />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input\n                    {...input}\n                    type=\"password\"\n                    placeholder=\"Your Password\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"repeatPassword\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input\n                    {...input}\n                    type=\"password\"\n                    placeholder=\"Confirm Your Password\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <button type=\"submit\">Registration</button>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default Registration;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/modal/modal.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/login/login.js",["109"],"import React, { useContext } from 'react';\nimport style from './login.module.scss';\nimport { loginRequest } from '../../api/auth';\nimport { Form, Field } from 'react-final-form';\nimport { loginValidation } from '../../utils/validator';\n\nimport { useHistory } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { AuthContext } from '../context/auth-context';\n\nfunction Login() {\n  let history = useHistory();\n\n  const auth = useContext(AuthContext);\n\n  const onSubmit = async (values) => {\n    try {\n      const loginValue = await loginRequest(values);\n      auth.login(loginValue.data.token);\n      history.push('/auth-page');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const ErrorValid = ({ meta }) => {\n    {\n      return (meta.error || meta.submitError) && meta.touched ? (\n        <span>{meta.error || meta.submitError}</span>\n      ) : (\n        <></>\n      );\n    }\n  };\n\n  return (\n    <div className={style.modal}>\n      <Form\n        onSubmit={onSubmit}\n        validate={loginValidation}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <h1>Login</h1>\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <label> Email</label>\n                  <input\n                    {...input}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Your Email\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input\n                    {...input}\n                    type=\"password\"\n                    placeholder=\"Your Password\"\n                    name=\"password\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <button type=\"submit\">Login</button>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\nexport default withRouter(Login);\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/auth-page-components/description/description.js",["110","111"],"import React from 'react';\nimport style from './description.module.scss';\nimport video from '../../../images/video.png';\nimport button from '../../../images/button.png';\n\nfunction Description() {\n  return (\n    <div className={style.container}>\n      <div className={style.content}>\n        <div className={style.about_company}>\n          <div className={style.header}>\n            <h1>Easy to Use Cloud Budget Management Softwar</h1>\n          </div>\n          <div className={style.description}>\n            <p>\n              Our software is made so you can access and manage your budget and\n              expenses online at any time from any device. It provides detailed\n              income and expense reports with graphs so you can easilly see your\n              spending patterns and budget at a glance. Read below to find out\n              more.\n            </p>\n          </div>\n          <div className={style.link}>\n            <a href=\"lern_more\">Learn more</a>\n          </div>\n        </div>\n        <div className={style.videoplayer}>\n          <div className={style.video}>\n            <img src={video} />\n          </div>\n          <div className={style.button}>\n            <button>\n              <img src={button} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Description;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/utils/validator.js",["112","113","114","115","116","117"],"export const validation = (values) => {\n  const errors = {};\n  console.log(values);\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  errors.name = isRequired(values.name);\n  errors.lastname = isRequired(values.lastname);\n  errors.email = isRequired(values.email);\n  errors.password = isRequired(values.password);\n  errors.repeatPassword = isRequired(values.repeatPassword);\n\n  if (values.name && values.name.length < 3) {\n    errors.name = 'Минимальная длина должна быть больше 3 символов';\n  }\n  if (values.lastname && values.lastname.length < 3) {\n    errors.lastname = 'Минимальная длина должна быть больше 3 символов';\n  }\n\n  if (!re.test(String(values.email).toLowerCase())) {\n    errors.email = 'Некорректный email';\n  }\n\n  if (values.password && values.password.length < 6) {\n    errors.password = 'Длина пароля должна быть не менее 6 символов';\n  }\n  if (values.password !== values.repeatPassword) {\n    errors.password = 'Пароли должны совпадать';\n  }\n\n  return errors;\n};\n\nexport const loginValidation = (values) => {\n  const errors = {};\n  console.log(values);\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  errors.email = isRequired(values.email);\n  errors.password = isRequired(values.password);\n  if (!re.test(String(values.email).toLowerCase())) {\n    errors.email = 'Некорректный email';\n  }\n  return errors;\n};\n\nexport const changeDataValidation = (values) => {\n  const errors = {};\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (!re.test(String(values.email).toLowerCase())) {\n    errors.email = 'Некорректный email';\n  }\n  if (values.name && values.name.length < 3) {\n    errors.name = 'Минимальная длина должна быть больше 3 символов';\n  }\n  if (values.lastname && values.lastname.length < 3) {\n    errors.lastname = 'Минимальная длина должна быть больше 3 символов';\n  }\n  if (values.newPassword && values.newPassword.length < 6) {\n    errors.newPassword = 'Длина пароля должна быть не менее 6 символов';\n  }\n  return errors;\n};\n\nconst isRequired = (values) => {\n  if (!values) {\n    return 'Поле обязательно для заполения';\n  }\n};\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/route/route.js",[],"/home/user/projects/gatsby-app/gatsby-site/frontend/src/components/change-data/change-data.js",["118","119","120"],"import React, { useCallback, useContext, useState, useEffect } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { UserContext } from '../context/user-context';\nimport style from './change-data.module.scss';\nimport { changeDataRequest } from '../../api/auth';\nimport { changeDataValidation } from '../../utils/validator';\nimport { AuthContext } from '../context/auth-context';\nimport { Spinner } from '@blueprintjs/core';\n\nfunction ChangeData() {\n  const [userValue, setUserValue] = useState({});\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const user = useContext(UserContext);\n  const { token } = useContext(AuthContext);\n  const ErrorValid = ({ meta }) => {\n    {\n      return (meta.error || meta.submitError) && meta.touched ? (\n        <span>{meta.error || meta.submitError}</span>\n      ) : (\n        <></>\n      );\n    }\n  };\n  const onSubmit = async (values) => {\n    setError('');\n    setIsLoading(true);\n    try {\n      await changeDataRequest(values, token);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e.response.data.message);\n      if (e.response.data?.message) {\n        setError(e.response.data.message);\n        setIsLoading(false);\n      }\n    }\n  };\n  //   const errorValue = ()=>{\n  //       setError(error)\n  //   }\n  const userName = useCallback(async (values) => {\n    const userNameValue = await user.findUser(values);\n\n    setUserValue({\n      name: userNameValue.user_first_name,\n      lastname: userNameValue.user_last_name,\n      email: userNameValue.user_email,\n    });\n    return userNameValue;\n  }, []);\n  useEffect(() => {\n    userName();\n  }, []);\n  return (\n    <div className={style.modal}>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{\n          name: userValue.name,\n          lastname: userValue.lastname,\n          email: userValue.email,\n        }}\n        validate={changeDataValidation}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <h3>Change your data</h3>\n            {error && <p className={style.error_text}>{error}</p>}\n            <Field name=\"name\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Name</label>\n                  <input\n                    {...input}\n                    name=\"name\"\n                    type=\"name\"\n                    placeholder=\"Your Name\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"lastname\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Lastname</label>\n                  <input\n                    {...input}\n                    type=\"lastname\"\n                    placeholder=\"Your Lastname\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <label> Email</label>\n                  <input {...input} type=\"email\" placeholder=\"Your Email\" />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <label>Password</label>\n                  <input\n                    {...input}\n                    type=\"password\"\n                    placeholder=\"Your current password\"\n                  />\n                  {/* <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div> */}\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"newPassword\">\n              {({ input, meta }) => (\n                <div>\n                  <label> Write your new Password</label>\n                  <input\n                    {...input}\n                    type=\"password\"\n                    placeholder=\"Your  New Password\"\n                  />\n                  <div className={style.error}>\n                    <ErrorValid meta={meta} />\n                  </div>\n                </div>\n              )}\n            </Field>\n\n            <button type=\"submit\">\n              Change\n              {isLoading ? <Spinner size=\"20\" intent=\"primary\" /> : null}\n            </button>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default ChangeData;\n","/home/user/projects/gatsby-app/gatsby-site/frontend/src/pages/notes-page/notes-page.js",["121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":25,"column":6,"nodeType":"132","endLine":25,"endColumn":13,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":33,"column":5,"nodeType":"132","endLine":33,"endColumn":11,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":18,"column":24,"nodeType":"128","endLine":18,"endColumn":31},{"ruleId":"130","severity":1,"message":"137","line":24,"column":6,"nodeType":"132","endLine":24,"endColumn":13,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":4,"column":7,"nodeType":"128","messageId":"129","endLine":4,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":55,"column":17,"nodeType":"142","endLine":55,"endColumn":36},{"ruleId":"130","severity":1,"message":"143","line":28,"column":6,"nodeType":"132","endLine":28,"endColumn":8,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"145","line":63,"column":6,"nodeType":"132","endLine":63,"endColumn":8,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"141","line":73,"column":19,"nodeType":"142","endLine":73,"endColumn":38},{"ruleId":"130","severity":1,"message":"145","line":73,"column":6,"nodeType":"132","endLine":73,"endColumn":8,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"141","line":82,"column":17,"nodeType":"142","endLine":82,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":16,"column":5,"nodeType":"150","messageId":"151","endLine":22,"endColumn":6},{"ruleId":"148","severity":1,"message":"149","line":27,"column":5,"nodeType":"150","messageId":"151","endLine":33,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":29,"column":13,"nodeType":"142","endLine":29,"endColumn":32},{"ruleId":"140","severity":1,"message":"141","line":33,"column":15,"nodeType":"142","endLine":33,"endColumn":35},{"ruleId":"152","severity":1,"message":"153","line":4,"column":24,"nodeType":"154","messageId":"155","endLine":4,"endColumn":25,"suggestions":"156"},{"ruleId":"152","severity":1,"message":"153","line":4,"column":49,"nodeType":"154","messageId":"155","endLine":4,"endColumn":50,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"153","line":36,"column":24,"nodeType":"154","messageId":"155","endLine":36,"endColumn":25,"suggestions":"158"},{"ruleId":"152","severity":1,"message":"153","line":36,"column":49,"nodeType":"154","messageId":"155","endLine":36,"endColumn":50,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"153","line":47,"column":24,"nodeType":"154","messageId":"155","endLine":47,"endColumn":25,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"153","line":47,"column":49,"nodeType":"154","messageId":"155","endLine":47,"endColumn":50,"suggestions":"161"},{"ruleId":"148","severity":1,"message":"149","line":17,"column":5,"nodeType":"150","messageId":"151","endLine":23,"endColumn":6},{"ruleId":"130","severity":1,"message":"143","line":51,"column":6,"nodeType":"132","endLine":51,"endColumn":8,"suggestions":"162"},{"ruleId":"130","severity":1,"message":"145","line":54,"column":6,"nodeType":"132","endLine":54,"endColumn":8,"suggestions":"163"},{"ruleId":"126","severity":1,"message":"164","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findUser'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useMemo has missing dependencies: 'findUser' and 'token'. Either include them or remove the dependency array.",["168"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'tokenValue'. Either include it or remove the dependency array.",["169"],"'host' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'user'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["171"],["172"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["173","174"],["175","176"],["177","178"],["179","180"],["181","182"],["183","184"],["185"],["186"],"'Reacr' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"201","fix":"205","desc":"203"},{"messageId":"198","fix":"206","desc":"200"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"198","fix":"208","desc":"200"},{"messageId":"201","fix":"209","desc":"203"},{"messageId":"198","fix":"210","desc":"200"},{"messageId":"201","fix":"211","desc":"203"},{"messageId":"198","fix":"212","desc":"200"},{"messageId":"201","fix":"213","desc":"203"},{"desc":"193","fix":"214"},{"desc":"195","fix":"215"},"Update the dependencies array to be: [findUser, token]",{"range":"216","text":"217"},"Update the dependencies array to be: [findUser, token, user]",{"range":"218","text":"219"},"Update the dependencies array to be: [login, tokenValue]",{"range":"220","text":"221"},"Update the dependencies array to be: [user]",{"range":"222","text":"223"},"Update the dependencies array to be: [userName]",{"range":"224","text":"225"},{"range":"226","text":"225"},"removeEscape",{"range":"227","text":"228"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"229","text":"230"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"231","text":"228"},{"range":"232","text":"230"},{"range":"233","text":"228"},{"range":"234","text":"230"},{"range":"235","text":"228"},{"range":"236","text":"230"},{"range":"237","text":"228"},{"range":"238","text":"230"},{"range":"239","text":"228"},{"range":"240","text":"230"},{"range":"241","text":"223"},{"range":"242","text":"225"},[540,547],"[findUser, token]",[649,655],"[findUser, token, user]",[708,715],"[login, tokenValue]",[1033,1035],"[user]",[1573,1575],"[userName]",[1686,1688],[107,108],"",[107,107],"\\",[132,133],[132,132],[1217,1218],[1217,1217],[1242,1243],[1242,1242],[1668,1669],[1668,1668],[1693,1694],[1693,1693],[1621,1623],[1667,1669]]